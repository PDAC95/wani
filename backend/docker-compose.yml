version: '3.8'

services:
  # FastAPI Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wani-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DEBUG=True
    volumes:
      - .:/app
      - /app/venv  # Exclude venv from mount
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - wani-network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # PostgreSQL Database (Optional - for local development)
  # Comment out if using Supabase cloud
  postgres:
    image: postgres:15-alpine
    container_name: wani-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wani_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wani-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache (Optional - for local development)
  # Comment out if using Upstash cloud
  redis:
    image: redis:7-alpine
    container_name: wani-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - wani-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Celery Worker (for background tasks)
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wani-celery
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/venv
    depends_on:
      - backend
      - redis
    networks:
      - wani-network
    restart: unless-stopped
    command: celery -A app.workers.celery_app worker --loglevel=info

  # Celery Beat (for scheduled tasks)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wani-celery-beat
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/venv
    depends_on:
      - backend
      - redis
    networks:
      - wani-network
    restart: unless-stopped
    command: celery -A app.workers.celery_app beat --loglevel=info

networks:
  wani-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
