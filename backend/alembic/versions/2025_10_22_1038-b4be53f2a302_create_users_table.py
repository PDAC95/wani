"""create users table

Revision ID: b4be53f2a302
Revises: 
Create Date: 2025-10-22 10:38:19.999863

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b4be53f2a302'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique user identifier'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='User email address (unique, used for login)'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='Bcrypt hashed password (never store plain text)'),
    sa.Column('full_name', sa.String(length=255), nullable=False, comment="User's full legal name"),
    sa.Column('phone', sa.String(length=20), nullable=False, comment="User's phone number with country code"),
    sa.Column('kyc_level', sa.Integer(), nullable=False, comment='KYC verification level: 0=unverified, 1=basic, 2=advanced, 3=full'),
    sa.Column('role', sa.String(length=50), nullable=False, comment='User role: user, business, admin'),
    sa.Column('is_verified', sa.Boolean(), nullable=False, comment='Email verification status'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Account active status (false = suspended/deleted)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Account creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Last account update timestamp'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index('ix_users_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index('ix_users_kyc_level', 'users', ['kyc_level'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_kyc_level', table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index('ix_users_email_active', table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('ix_users_created_at', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
